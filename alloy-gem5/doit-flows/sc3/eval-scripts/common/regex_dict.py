import re

regex_dict = {
    "sim-ticks"       : re.compile(r'^sim_ticks'),
    "sim-insts"       : re.compile(r'^sim_insts'),
    "runtime-cycles"  : re.compile(r'main_cpu\d*\.appl_runtime_cycles'),
    "task-cycles"     : re.compile(r'main_cpu\d*\.in_task_cycles'),

    # network stats
    "getx-count"            : re.compile(r'coh_msg_count::GETX '),
    "upgrade-count"         : re.compile(r'coh_msg_count::UPGRADE '),
    "gets-count"            : re.compile(r'coh_msg_count::GETS '),
    "get_ins-count"         : re.compile(r'coh_msg_count::GET_INSTR'),
    "inv-count"             : re.compile(r'coh_msg_count::INV '),
    "putx-count"            : re.compile(r'coh_msg_count::PUTX '),
    "unlock-count"          : re.compile(r'coh_msg_count::UNLOCK '),
    "mem_ack-count"         : re.compile(r'coh_msg_count::MEMORY_ACK'),
    "data-count"            : re.compile(r'coh_msg_count::DATA '),
    "data_exc-count"        : re.compile(r'coh_msg_count::DATA_EXCLUSIVE'),
    "mem_data-count"        : re.compile(r'coh_msg_count::MEMORY_DATA'),
    "ack-count"             : re.compile(r'coh_msg_count::ACK '),
    "wb_ack-count"          : re.compile(r'coh_msg_count::WB_ACK '),
    "unblock-count"         : re.compile(r'coh_msg_count::UNBLOCK '),
    "exc_unblock-count"     : re.compile(r'coh_msg_count::EXCLUSIVE_UNBLOCK'),
    "atomic-count"          : re.compile(r'coh_msg_count::ATOMIC '),
    "atomic_resp-count"     : re.compile(r'coh_msg_count::ATOMIC_RESP'),
    "ll-count"              : re.compile(r'coh_msg_count::LL '),
    "sc_success-count"      : re.compile(r'coh_msg_count::SC_SUCCESS'),
    "sc_failure-count"      : re.compile(r'coh_msg_count::SC_FAILED'),
    "sc-count"              : re.compile(r'coh_msg_count::SC '),
    "getv-count"            : re.compile(r'coh_msg_count::GETV '),
    "putv-count"            : re.compile(r'coh_msg_count::PUTV '),
    "getx-bytes"            : re.compile(r'coh_msg_bytes::GETX '),
    "upgrade-bytes"         : re.compile(r'coh_msg_bytes::UPGRADE '),
    "gets-bytes"            : re.compile(r'coh_msg_bytes::GETS '),
    "get_ins-bytes"         : re.compile(r'coh_msg_bytes::GET_INSTR'),
    "inv-bytes"             : re.compile(r'coh_msg_bytes::INV '),
    "putx-bytes"            : re.compile(r'coh_msg_bytes::PUTX '),
    "unlock-bytes"          : re.compile(r'coh_msg_bytes::UNLOCK '),
    "mem_ack-bytes"         : re.compile(r'coh_msg_bytes::MEMORY_ACK'),
    "data-bytes"            : re.compile(r'coh_msg_bytes::DATA '),
    "data_exc-bytes"        : re.compile(r'coh_msg_bytes::DATA_EXCLUSIVE'),
    "mem_data-bytes"        : re.compile(r'coh_msg_bytes::MEMORY_DATA'),
    "ack-bytes"             : re.compile(r'coh_msg_bytes::ACK '),
    "wb_ack-bytes"          : re.compile(r'coh_msg_bytes::WB_ACK'),
    "unblock-bytes"         : re.compile(r'coh_msg_bytes::UNBLOCK '),
    "exc_unblock-bytes"     : re.compile(r'coh_msg_bytes::EXCLUSIVE_UNBLOCK'),
    "atomic-bytes"          : re.compile(r'coh_msg_bytes::ATOMIC '),
    "atomic_resp-bytes"     : re.compile(r'coh_msg_bytes::ATOMIC_RESP'),
    "ll-bytes"              : re.compile(r'coh_msg_bytes::LL'),
    "sc_success-bytes"      : re.compile(r'coh_msg_bytes::SC_SUCCESS'),
    "sc_failure-bytes"      : re.compile(r'coh_msg_bytes::SC_FAILED'),
    "sc-bytes"              : re.compile(r'coh_msg_bytes::SC '),
    "getv-bytes"            : re.compile(r'coh_msg_bytes::GETV '),
    "putv-bytes"            : re.compile(r'coh_msg_bytes::PUTV '),

    "num-cycles"    : re.compile(r'main_cpu\d*\.numCycles'),
    "unique-insts"  : re.compile(r'main_cpu\d*\.fetch\.uniqueInstCount'),
    "total-insts"   : re.compile(r'main_cpu\d*\.fetch\.totalInstCount'),
}
